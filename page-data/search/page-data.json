{"componentChunkName":"component---src-pages-search-tsx","path":"/search/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"rawMarkdownBody":"\nWorkbench, sequel pro를 aws로 연결해서 sql을 연습하다 oracle을 연습해보고 싶어졌다. 허나 oracle에 가보니 오라클 18c Express Edition이 윈도우만 지원하는것 보고 하늘이시여.. 또 몇시간 블로그 보며 파해쳐야 겠구나 했다. \n\n오늘은 Mac_Lover들이 oracle을 docker로 다운로드 하는 방법을 포스팅 해보려고 한다. \n\n우선 크게 보면 \n\n**1. Docker 설치**\n\n**2. Terminal 에서 oracle 11g 설치**\n\n**3. SQL Plus 실행하기**\n\n로 보면 되겠다.\n\n**1. Docker 설치**\n- https://www.docker.com/products/docker-desktop\n1-1. 도커를 다운로드 하면 앱에서 창에 복붙해야하는 명령어가 뜬다. 그 명령어를 터미널 창에 복붙하자.\n![png](./step1.png)\n1-2. 복붙이 끝나고 실행이 되면 우측 상단과 중간 사이에 귀여운 고래 모양이 뜬다. 고래 모양이 뜨면 잘 실행되고 있다는 것.\n![png](./step2.png)\n**2. Terminal 에서 oracle 11g 설치하기.**\n2-1. 터미널에서 **docker search oracle-xe-11g** 명령어를 입력해서 다운로드 할 이미지를 검색한다.검색한 이미지 목록을 밑으로 쭉 내리다 보면 jaspeen/oracle-xe-11g가 보일텐데 이 것을 사용해서 이미지를 다운로드 해보자.\n![png](./step3.png)\n2-2. docker pull jaspeen/oracle-xe-11g 명령어를 입력하면 아래와 같은 화면이 나타난다.\n![png](./step4.png)\n2-3. docker images 명령어를 사용하여 jaspeen/oracle-xe-11g 이미지가 다운로드 되었는지 확인한다.\n![png](./step5.png)\n2-4. 이제 컨테이너 생성을 해 볼 차례이다.\n**docker run --name oracle -d -p 8080:8080 -p 1521:1521 jaspeen/oracle-xe-11g** 명령어를 입력하여 컨테이너의 생성과 실행을 해준다.\n여기서 **oracle 은 임의로 설정한 컨테이너의 이름**으로, 본인이 원하는 이름을 넣어 명령문을 작성하면 된다.내가 입력한 oracle 의 컨테이너가 생성되고\n**docker ps**를 입력해서 컨테이너가 제대로 실행되는지 (NAMES에 지정한 이름이 뜨는지) 확인한다.\n![png](./step6.png)\n2-5. **docker exec -it oracle sqlplus** 명령문으로 sqlplus를 시작할 수 있다.여기서 oracle 은 컨테이너를 생성할때 만든 임의의 컨테이너 이름으로, 각자가 정한 이름을 넣어주면 된다.\n2-6. Enter user-name : 에는 **system** 을 입력하고 Enter password: 에는 본인이 원하는 비번을 입력하면 되는데 비밀번호는 입력해도 화면상으로 보이지 않기 때문에 오타에 유의한다.둘 다 정확히 입력했다면 Connecte to: 와 함께 SQL> 이 뜬다\n![png](./step7.png)\n**3. SQLPlus가 실행된다.**","excerpt":"Workbench, sequel pro를 aws로 연결해서 sql을 연습하다 oracle을 연습해보고 싶어졌다. 허나 oracle에 가보니 오라클 18c Express Edition이 윈도우만 지원하는것 보고 하늘이시여.. 또 몇시간 블로그 보며 파…","fields":{"slug":"/docker로 oracle다운받기 gitblog 7714f19a5e3c4fd3b0f70fe009775ff2/"},"frontmatter":{"date":"Mar 02, 2021","title":"Docker로 Oracle다운받기","tags":["Dockerdownload","mac도커다운로드","mac오라클다운로드하는방법","맥오라클다운로드"],"update":"Jan 01, 0001"}}},{"node":{"rawMarkdownBody":"\n함수 f(x,y) = $2x^2 + 6xy + 7y^2 -26x -54y + 107$로 표현되는 지형을 그래프로 나타내고, 지형의 (14,4)지점에 공을 두었다면 어떤 경로로 공이 움직일지 경로를 그려라\n\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport sympy\nimport matplotlib as mpl\nimport scipy as sp\nimport pandas as pd\n```\n\n\n```python\nblack = {'facecolor':'black'}\ndef f(x,y):\n    return 2*x**2+6*x*y+7*y**2-26*x-54*y+107\nxx = np.linspace(1,16,100)\nyy = np.linspace(-3,6,90)\nX, Y = np.meshgrid(xx,yy)\nZ=f(X,Y)\n\ndef gx(x,y):\n    return 4*x+6*y-26\ndef gy(x,y):\n    return 6*x+14*y-54\n\nxx2 = np.linspace(1,16,15)\nyy2 = np.linspace(-3,6,9)\nX2,Y2 = np.meshgrid(xx2,yy2)\nGX = gx(X2,Y2)\nGY = gy(X2,Y2)\nplt.figure(figsize=(10,5))\nplt.contour(X,Y,Z, levels=np.logspace(0,3,10))\n\nx0=(14,4)\nplt.plot(x0[0],x0[1],'ko',ms=10)\n\nfor i in range(20):\n    g=np.array((gx(x0[0],x0[1]),gy(x0[0],x0[1])))\n    x_next= x0-0.02*g\n    plt.annotate('',xy=x_next,xytext=x0,arrowprops=black)\n    x0= x_next\n    plt.quiver(X2,Y2,GX,GY,color='blue', scale=400, minshaft=2)\n\nplt.xlabel('x')\nplt.ylabel('y')\n\nplt.show()\n```\n\n\n![png](./chapter4_from_page_317_to_318_2_0.png)\n\n\n\n","excerpt":"함수 f(x,y) = 로 표현되는 지형을 그래프로 나타내고, 지형의 (14,4)지점에 공을 두었다면 어떤 경로로 공이 움직일지 경로를 그려라","fields":{"slug":"/chapter4_from_page_317_to_318_files/"},"frontmatter":{"date":"Jan 22, 2021","title":"기울기 벡터를 이용한 응용 문제 풀이.","tags":["Matplotlib","gredient vector","기울기 벡터","퀴버플로"],"update":"Jan 01, 0001"}}},{"node":{"rawMarkdownBody":"### Steps to get a gradient vector.      \n- given equation: f(x,y) = $2x^2 + 6xy + 7y^2 -26x -54y + 107$\n- first, cal with respect to x and y each. Then you will get a two derivative equations\n\n\\begin{equation}\n    \\nabla (f)= \\begin{bmatrix}\n4x+6y-26\\\\\n6x+14y-54\n\\end{bmatrix}\n\\end{equation}\n\n- second, choose the point where you want to get a slope each. Then apply the point.\n    - x=7,y=1\n        - then you will get an (8,2) which is a slope of each derevative. \n- at last, try to get a gradient vector by calculating the following : $\\sqrt{8^2+2^2}$\n\n\n\n\n```python\nimport numpy as np\nimport matplotlib.pylab as plt\n\nblack = {'facecolor':'black'}\ndef g(x,y):\n    return (4*x+6*y-26, 6*x+14*y-54)\ng1 = g(7,1)\ng2 = g(2,1)\n\nplt.plot(0,0,'kP',ms=10)\nplt.plot(g1[0],g1[1],'ro',ms=10)\nplt.annotate('',xy=g1,xytext=(0,0),arrowprops=black)\nplt.plot(g2[0],g2[1],'ro',ms=10)\nplt.annotate('',xy=g2,xytext=(0,0),arrowprops=black)\n\nplt.axis('equal')\nplt.show()\n```\n\n\n![png](./Cal_Matrix_chapter4_from_page_313_to_316_1_0.png)\n\n\nFollowing graph is to show the function : f(x,y) = $2x^2 + 6xy + 7y^2 -26x -54y + 107$\n\n\n```python\ndef f(x,y):\n    return 2*x**2+6*x*y+7*y**2-26*x-54*y+107\nxx = np.linspace(1,16,100)\nyy = np.linspace(-3,6,90)\nX,Y = np.meshgrid(xx,yy)\nZ=f(X,Y)\n\ndef gx(x,y):\n    return 4*x+6*y-26\ndef gy(x,y):\n    return 6*x+14*y-54\n\nxx2 = np.linspace(1,16,15)\nyy2 = np.linspace(-3,6,9)\n\nX2, Y2 = np.meshgrid(xx2,yy2)\nGX = gx(X2,Y2)\nGY = gy(X2,Y2)\nplt.figure(figsize = (10,5))\nplt.contour(X,Y,Z, levels=np.logspace(0,3,10))\nplt.quiver(X2, Y2, GX, GY, color='blue', scale=400, minshaft=2)\n\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('quiver plot')\nplt.show()\n```\n\n\n![png](./Cal_Matrix_chapter4_from_page_313_to_316_3_0.png)\n\n\n\n```python\n\n```\n","excerpt":"Steps to get a gradient vector. given equation: f(x,y) =  first, cal with respect to x and y each. Then you will get a two derivative equat…","fields":{"slug":"/Cal_Matrix_chapter4_from_page_313_to_316_files/"},"frontmatter":{"date":"Jan 18, 2021","title":"Matplotlib을 이용해 기울기 벡터 퀴버플롯 그래프 표현.","tags":["Matplotlib","gredient vector","기울기 벡터","퀴버플로"],"update":"Jan 01, 0001"}}}]}},"pageContext":{}},"staticQueryHashes":["2027115977","694178885"]}